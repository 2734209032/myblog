(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{429:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-什么是虚拟dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是虚拟dom"}},[s._v("#")]),s._v(" 1.什么是虚拟DOM")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("面试题 ？什么是虚拟dom  vitural dom \n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 虚拟dom 就是 => 用来保存节点信息, 描述真实dom的JavaScript对象")]),s._v("\n优点：无需手动操作 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("： 我们不再需要手动去操作 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("，只需要写好 View"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Model 的代码逻辑，框架会根据虚拟 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v(" 和 数据双向绑定，帮我们以可预期的方式更新视图，极大提高我们的开发效率；\n缺点：无法进行极致优化： 虽然虚拟 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" 合理的优化，足以应对绝大部分应用的性能需求，但在一些性能要求极高的应用中虚拟 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v(" 无法进行针对性的极致优化。首次渲染大量"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("时，由于多了一层虚拟"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("的计算，会比innerHTML插入慢。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_2-vue就地复用策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue就地复用策略"}},[s._v("#")]),s._v(" 2.vue就地复用策略")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("就地复用：vue会尽可能的同层级同位置， 对比虚拟dom，复用旧的dom结构，进行差异化更新\n好处：可以复用旧的dom结构，提高渲染效率\n设置了key，相当于给这个li标签加了一个标记，\n新旧虚拟dom对比的时候，就会按着key的值 对比原来的那个标签\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//就是相当于，当我们以数组的index作为key，然后比如我们在数组的开头加了一个元素，再去渲染页面时，首先根据标识一样的去对比，")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果内容结构一样就复用，不一样就生成，提高页面渲染的效率")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"_3-请解释什么是单页面应用-single-page-app-以及如何使其对搜索引擎友好"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-请解释什么是单页面应用-single-page-app-以及如何使其对搜索引擎友好"}},[s._v("#")]),s._v(" 3.请解释什么是单页面应用(single page app),以及如何使其对搜索引擎友好")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("什么是单页面应用：\n指只有一个主页面的应用，一开始只需要加载一次js、css等相关资源。所有内容都包含在主页面，对每一个功能模块组件化。单页应用跳转，就是切换相关组件，仅仅刷新局部资源\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MPA")]),s._v("多页面应用 （MultiPage Application），指有多个独立页面的应用，每个页面必须重复加载js、css等相关资源。多页应用跳转，需要整页资源刷新\n解决单页面页面首次加载速度慢\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("路由懒加载，最开始不需要展示的页面，就利用懒加载\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("浏览器缓存 利用浏览器缓存来存储静态资源\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("打包js css 文件，减少代码体积\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v("使用"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CDN")]),s._v("内容分发网络 将静态资源部署到 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CDN")]),s._v(" 上，可以使用户从最近的服务器获取资源，从而加速首屏加载速度。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v("使用服务端渲染和预渲染\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[t("strong",[s._v("如何使其对搜索引擎友好")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("预渲染\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("服务端渲染"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//指的是我们页面的渲染操作不是在浏览器了，而是服务端，服务端直接返回给我们html")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_4-组件中的data为什么是一个函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-组件中的data为什么是一个函数"}},[s._v("#")]),s._v(" 4.组件中的data为什么是一个函数？")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("如果data是对象的话，对象属于引用类型，会影响到所有的实例。所以为了保证组件不同的实例之间data不冲突，data必须是一个函数。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("因为，在"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vue")]),s._v("的时候传入我们的配置项$options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("之后执行"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("_init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("把配置项传进去，然后_init在内部做了很多操作，我们重点看那个"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("_initState")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  initState函数按顺序初始化$options的数据，顺序为 prop"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("methods"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("computed"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("watch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("在我们初始化data时，会调用"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_initData"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("在这个initData中 将vm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data 赋值给vm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_data，如果说我们data是一个对象，则所有的vue实例都能修改data对象里面的属性，因为他们引用的对象指向同一个地址\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_5-为什么v-for和v-if不建议用在一起"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-为什么v-for和v-if不建议用在一起"}},[s._v("#")]),s._v(" 5.为什么v-for和v-if不建议用在一起")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("当 v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" 和 v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 处于同一个节点时，v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" 的优先级比 v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 更高\n这意味着 v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 将分别重复运行于每个 v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" 循环中。如果要遍历的数组很大，而真正要展示的数据很少时，这将造成很大的性能浪费（Vue2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x）\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("这种场景建议使用 computed 计算属性，先对数据进行过滤\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"_6-vue中key的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-vue中key的作用"}},[s._v("#")]),s._v(" 6.vue中key的作用")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("key的作用\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("是为了在diff算法执行时更快的找到对应的节点，提高diff速度，更高效的更新虚拟"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("\n如果没有key，那么就会采用遍历查找的方式去找到对应的旧节点。一种一个map映射，另一种是遍历查找。相比而言。map映射的速度更快。\nkey也不能是元素的index，因为假设我们给数组前插入一个新元素，它的下标是"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，那么和原来的第一个元素重复了，整个数组的key都发生了改变，这样就跟没有key的情况一样了\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("第一种情况是 v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 中使用 key。由于 Vue 会尽可能高效地渲染元素，通常会复用已有元素而不是从头开始渲染。因此当使用 v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 来实现元素切换的时候，如果切换前后含有相同类型的元素，那么这个元素就会被复用。如果是相同的 input 元素，那么切换前后用户的输入不会被清除掉，这样是不符合需求的。因此可以通过使用 key 来唯一的标识一个元素，这个情况下，使用 key 的元素不会被复用。这个时候 key 的作用是用来标识一个独立的元素。\n但是只是vue2有这个缺点，vue3没有\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_7-说说mvvm模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-说说mvvm模型"}},[s._v("#")]),s._v(" 7.说说MVVM模型")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MVVM")]),s._v("模型 ：一种软件设计模式   是Model 和View 和ViewMolde的简写\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// M:Model 代表数据模型，数据和业务逻辑都在 Model 层中定义。（对应data中的数据和业务逻辑）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// V:View 代表UI视图,也就是用户界面，负责数据的展示。 （对应着template模板，负责数据的展示）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// VM:viewModel 也叫做视图数据连接层, 负责监听 Model 中数据的改变并且控制视图的更新，处理用户交互操作, （对应着我们的vue实例)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MVC")]),s._v(" 模型是model 数据模型 view 视图 controller 控制器 ，原生js操作dom的一种方式\n问题： 展示 js 中的变量，需要 innerText textContent innerHTML  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" xss 攻击  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("字符串需要编译之后才能生成 dom 性能差\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 什么模式? MVC —— 模型视图控制器 —— 彼此割裂")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 什么叫做模式？ —— 一种解决问题的套路")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MVVM")]),s._v("（Model"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("View"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ViewModel）是一种用于构建用户界面的软件架构模式，它将应用程序分成三个部分：模型")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("model"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("、视图")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("view"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("和视图模型")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("viewModel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("。视图模型通常负责维护模型状态，并同步视图以反映模型的变化。\n在"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MVVM")]),s._v("中，发布订阅者模式通常被用来实现视图模型和视图之间的通信，例如当数据发生变化时通知视图进行更新。Vue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js就是基于这种观察者模式设计的\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"_8-说一下什么是vue生命周期函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-说一下什么是vue生命周期函数"}},[s._v("#")]),s._v(" 8.说一下什么是vue生命周期函数")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("首先 vue生命周期函数是vue框架提供的内置函数 ，在不同的阶段自动执行\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("数据初始化阶段 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 挂载dom阶段 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("数据更新阶段 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v("组件销毁阶段\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" beforeCreate：data数据初始化之前，组件还没有数据\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("created")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" data数据初始化之后，可以获取到组件的数据\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" beforeMount："),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("挂载到页面之前，"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("还未挂载\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" mounted："),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("挂载之后，可以操作"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("了\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("beforeUpdate")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 数据更新，"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("更新前  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//组件更新前 ---\x3e数据是新的，页面是旧的 虚拟dom还没有对比重新渲染~~")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("updated")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 数据更新，"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("更新后\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("beforeDestroy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 组件销毁前   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 组件销毁前 ——组件实例依然还保留全部的功能 // 全局的定时器，不会自动销毁，需要手动关闭~~")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("destroyed")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 组件销毁后\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"_9-说说什么是单页面应用程序-优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-说说什么是单页面应用程序-优缺点"}},[s._v("#")]),s._v(" 9.说说什么是单页面应用程序 优缺点")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("单页面应用程序：指只有一个主页面的应用，一开始只需要加载一次js、css等相关资源。所有内容都包含在主页面，对每一个功能模块组件化。单页应用跳转，就是切换相关组件，仅仅刷新局部资源。\n多页面应用程序："),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MPA")]),s._v("多页面应用 （MultiPage Application），指有多个独立页面的应用，每个页面必须重复加载js、css等相关资源。多页应用跳转，需要整页资源刷新\n优点：\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 传统的多页面应用程序，每次请求服务器返回的都是一整个完整的页面\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 单页面应用程序只有第一次会加载完整的页面\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 以后每次请求仅仅获取必要的数据，减少了请求体积，加快页面响应速度，降低了对服务器的压力\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SPA")]),s._v("更好的用户体验，运行更加流畅\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("缺点")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("不利于 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SEO")]),s._v(" 搜索引擎优化 谷歌浏览器在解决这个问题 ssr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("服务端渲染 server side rendering\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"_10-说说为什么vue是异步更新dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-说说为什么vue是异步更新dom"}},[s._v("#")]),s._v(" 10.说说为什么vue是异步更新DOM")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("提高性能，将多次修改dom，存起来，一次性更新\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("原理")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("因为虚拟"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("只需要一次就可以将整个组件的"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("更新到最新，当dom更新了后，vue侦听器侦听到了，会先判断任务队列中有没有渲染操作的函数，保证不重复，然后只需要将渲染操作推迟到本轮事件循环的最后或者下一轮事件循环。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vue更新dom后是异步的调用了render函数和diff算法"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("这时无论后面有多少修改dom的操作，vue也只会在本轮事件循环执行完之前或下一次事件循环之前，更新dom，所以我们同步或异步的操作dom，都会存起来一次性更新"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n也就是说，只需要在本轮事件循环的最后，等前面更新状态的语句都执行完之后，执行一次渲染操作，它就可以无视前面各种更新状态的语法，无论前面写了多少条更新状态的语句，只在最后渲染一次就可以了，Vue的更新操作默认会将执行渲染操作的函数添加到微任务队列中\n"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("在钩子函数created")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("里面想要获取操作Dom，"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("把操作DOM的方法放在$nextTick中")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("\n但为什么vue是异步更新dom，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("$nextTick")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("为什么一定比它慢"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n    不一定的"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("看修改的顺序，如果在"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("$nextTick")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("下面修改dom了，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("$nextTick")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("就获取不到\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("strong",[s._v("$nextTick原理")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextTick 在内部做了一个优雅降级的操作，首先判断当前环境和浏览器支不不支持Promise，判断Promise 是不是"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" ，调用isNative方法，isNative方法，是把Promise传进去，判断Promise是不是一个函数，以及用正则判断Promise被toString字符串化，是不是包含native code 初始的时候返回"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("则使用promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("返回"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("则判断MutationObserver 以及setImmediate最后setTimeout兜底\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isNative")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("Ctor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Ctor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" Ctor "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'function'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("native code")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Ctor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"_11-说一下vue2生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-说一下vue2生命周期"}},[s._v("#")]),s._v(" 11.说一下vue2生命周期")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("钩子函数用来描述一个组件从引入到退出的全过程中的某个过程，整个过程称为生命周期。 "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("钩子函数按照组件生命周期的过程分为，挂载阶段")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("更新阶段")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("销毁阶段\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" beforeCreate：data数据初始化之前，组件还没有数据\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("created")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" data数据初始化之后，可以获取到组件的数据\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" beforeMount："),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("挂载到页面之前，"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("还未挂载\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" mounted："),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("挂载之后，可以操作"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("了\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("beforeUpdate")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 数据更新，"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("更新前  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//组件更新前 ---\x3e数据是新的，页面是旧的 虚拟dom还没有对比重新渲染~~")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("updated")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 数据更新，"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("更新后\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("beforeDestroy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 组件销毁前   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 组件销毁前 ——组件实例依然还保留全部的功能 // 全局的定时器，不会自动销毁，需要手动关闭~~")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("destroyed")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 组件销毁后\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"_12-说一下jquery和vue的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-说一下jquery和vue的区别"}},[s._v("#")]),s._v(" 12.说一下jquery和vue的区别")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("jquery")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("命令式   ：jQuery是命令式的操作"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("，命令式的局部更新视图   \nvue：声明式     ：我们不再需要关注怎么操作"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("，因为框架会帮我们自动去做，我们只关注状态就好了。  易维护\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_13-说一下vuex中的mutation函数为什么必须是异步的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-说一下vuex中的mutation函数为什么必须是异步的"}},[s._v("#")]),s._v(" 13.说一下Vuex中的mutation函数为什么必须是异步的")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为什么mutation必须是同步的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在Vue.js和其他一些前端JavaScript框架中，为什么mutation必须是同步的呢?")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这是因为Vue.js采用了一种基于数据驱动的设计模式，其中状态(state)存储在Vuex存储store)中。为了使Vuex存储在任何时候都保持一致性，必须保证状态的更改是可预测的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因此，Vuex要求mutation是同步的，这样才能保证状态的变更在任何时候都是可预测的。异步操作可能会导致状态的更改不可预测，并导致问题。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同时，异步操作通常会导致更多的复杂性，并且Vuex中的操作必须是可追踪的，以便调试和跟踪状态的变化。同步操作可以更容易地进行跟踪和调试，因此强制同步是有意义的。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果是异步的话，vue调试工具不知道这个异步函数是什么时候调用的，导致了数据的不可预测，并导致问题")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"_14-设计模式有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-设计模式有哪些"}},[s._v("#")]),s._v(" 14.设计模式有哪些")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("策略模式\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("定义")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 要实现某一个功能，有多种方案可以选择。我们定义策略，把它们一个个封装起来，并且使它们可以相互转换。\n使用场景：\n当你负责的模块，基本满足以下情况时\n各判断条件下的策略相互独立且可复用\n策略内部逻辑相对复杂\n策略需要灵活组合\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("发布 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 订阅模式\n发布"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("订阅是一种消息范式，消息的发布者，不会将消息直接发送给特定的订阅者，而是通过消息通道广播出去，然后呢，订阅者通过订阅获取到想要的消息\n使用场景：\n各模块相互独立\n存在一对多的依赖关系\n依赖模块不稳定、依赖关系不稳定\n各模块由不同的人员、团队开发\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("装饰器模式\n 是为了给一个函数赋能，增强它的某种能力，它能动态的添加对象的行为，也不影响原来的功能\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v("适配器模式\n个人理解，为了解决我们不兼容的问题，把一个类的接口换成我们想要的接口。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v("代理模式\n代理模式是为其它对象提供一种代理以控制这个对象的访问，具体执行的功能还是这个对象本身\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h2",{attrs:{id:"_15-mvvm是怎么实现的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-mvvm是怎么实现的"}},[s._v("#")]),s._v(" 15.MVVM是怎么实现的")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MVVM")]),s._v("的实现分为三步：数据劫持、模板编译和双向绑定\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("数据劫持  Object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("defineProperty方法，这也是vue2死活不支持ie8的原因之一\n做数据劫持时主要用到的就是"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v("和"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("两个属性，通过该方法被劫持的对象属性，只要在外界获取或者修改属性值都会触发"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v("或"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("方法，这样我们就可以在"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v("或"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("中对属性做一些额外对操作了\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("模板编译\n在vue中是通过一些指令或者小胡子语法来实现数据绑定的，而浏览器并不认识这些指令或者小胡子语法，因此在页面加载后需要将这些语法转换成真正的数据呈现给用户 遍历#app下所有的节点，然后根据节点的类型做相应的操作\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("双向绑定\n双向绑定 vue主要是利用数据劫持加发布订阅模式来实现数据的双向绑定的\n\n首先我们需要定义一个Dep类，用于对属性进行依赖收集和通知用到属性到地方进行同步更新\n然后再定义一个Watcher类，用于对属性进行监听，并实现属性值的同步更新\n在模板编译的时候，通过watcher来监听属性\n在数据劫持的"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v("函数中进行依赖收集\n在数据劫持的"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("函数中通知各个watcher进行数据更新\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h2",{attrs:{id:"_16-vue中组件通信方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-vue中组件通信方式"}},[s._v("#")]),s._v(" 16.vue中组件通信方式")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 父组件绑定属性传值 子组件props接收 子组件"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("$emit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'事件'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("提交事件 父组件@事件      父子级传值\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ref $refs 给子组件绑定ref属性，$refs可以获取子组件的属性和方法   父子级传值\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("父组件中 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$children"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("msg获取子组件中的msg， 子组件中 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("msg2 获取父组件中的msg2   父子级传值\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Vuex  vue插件，创建一个store实例，state定义数据，mutation修改操作，action 异步任务，getter计算属性 \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("provide "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" inject 通过provide："),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("msg")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'我是父组件的数据'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 与data同级 子组件中 ：inject"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'msg'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("与data同级，用的时候在data中data"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("msg2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 不论子组件嵌套有多深"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 只要调用了inject 那么就可以注入provide中的数据，而不局限于只能从当前父组件的props属性中回去数据\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("eventBus \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// event-bus.js")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Vue "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vue'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" EventBus "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localStorage "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" sessionStorage\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$attrs 用途"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("用来接受父组件传过来数据 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//特征:父传子,没有被子组件props接收的属性放到$attrs里面 / ")]),s._v("\n$listeners "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用途:用来接受父组件监听的事件方法 //特征:父组件通v-on监听事件,子组件通过$listeners接收事件方法")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h2",{attrs:{id:"_17-diff算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-diff算法"}},[s._v("#")]),s._v(" 17.diff算法")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// diff算法  ==> 比较新旧虚拟dom的差异")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 策略1  ==> 同级根元素的对比")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 如果根元素变化了，那么不考虑复用，整个dom树删除重建")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 如果根元素不变，看根元素的属性是否变化来更新属性，并递归的往下对比差异。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 策略2  ==> 兄弟元素比较")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 对比同级兄弟元素，默认按照下标进行对比复用  （不加key或者说key为index的时候）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 如果设置了key，key是唯一的标识，会按照相同的key的元素进行复用")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"_18-vue-use原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18-vue-use原理"}},[s._v("#")]),s._v(" 18.Vue.use原理")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Vue.use 本身是一个函数，用来安装插件~~")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Vue.use内部做了哪些操作？")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 判断插件是否注册安装过")]),s._v("\n安装过直接"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" 退出，方便下次链式调用\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 如果这个要安装的插件本身有install方法，执行它")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    同时把Vue构造函数作为第一个参数，以及use中的其他参数传入")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3. 如果没有install方法，并且插件本身就是一个函数，就去调用执行它")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    同时把Vue构造函数作为第一个参数，以及use中的其他参数传入")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4. 记录这个插件已经注册过 添加到数组")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"_19-为什么刷新页面vuex数据会丢失"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19-为什么刷新页面vuex数据会丢失"}},[s._v("#")]),s._v(" 19.为什么刷新页面vuex数据会丢失")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("页面刷新的时候异步请求后台数据，然后动态更新vuex中的数据，其中会有一种情况就是，网络延迟、数据量大的问题。 此时还没等vuex获取到后台返回的数据，页面就已经加载完成了，这样就会造成数据丢失\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("因为store里的数据是保存在运行内存中的，当页面刷新时，页面会重新加载vue实例，store里面的数据就会被重新赋值初始化。\n解决办法："),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("使用本地存储 持久化数据\n         "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("使用插件 vuex"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("persist\n  使用步骤：\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("npm install "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("save vuex"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("persist or yarn add vuex"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("persist\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("import VuexPersistence "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vuex-persist'")]),s._v("  引入\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("const vuexLocal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VuexPersistence")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  先创建一个对象并进行配置             ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("storage")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("localStorage         \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("const store "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vuex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Store")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//引入vuex插件")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("state")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("mutations")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("actions")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("plugins")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("vuexLocal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("plugin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"_20-vuex是干嘛的-属性怎么使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-vuex是干嘛的-属性怎么使用"}},[s._v("#")]),s._v(" 20.vuex是干嘛的，属性怎么使用")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("Vuex是集中管理项目公共数据的\nVuex 有state、mutations 、getters、actions、module属性。 state 属性用来存储公共管理的数据。 mutations 属性定义改变state中数据的方法， 注意：不要在mutation中的方法中写异步方法ajax，那样数据就不可跟踪了 。 getters 属性可以认为是定义 store 的计算属性。就像计算属性一样，getter 的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。 action属性类似于 mutation，不同在于：Action 提交的是 mutation，而不是直接变更状态。Action 可以包含任意异步操作。 moudle属性是将store分割成模块 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("可以通过map函数一次性获取多个属性或方法\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_21-vue2实现响应式的原理和缺陷"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21-vue2实现响应式的原理和缺陷"}},[s._v("#")]),s._v(" 21.vue2实现响应式的原理和缺陷")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("Vue响应式指的是：数据驱动视图，我们修改数据视图随之响应更新 核心"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("API")]),s._v("：Object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("defineProperty\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("在我们执行"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vue")]),s._v("创建实例时，会调用如下构造函数，在该函数内部调用"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("_init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("initMixin函数里面定义了原型方法_init，_init调用了initState")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("等方法，_init里做了很多初始化工作，我们重点关注initState\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("initState函数按顺序初始化$options的数据，顺序为 prop"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("methods"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("computed"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("watch\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("initData 将vm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data 赋值给vm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_data \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("proxy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 把 data 里的每一个属性都代理到当前实例上，就可以通过 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xx 访问了\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v("然后再调用 observe 监听整个 data，该方法用于创建监听器实例 ob "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Observer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.")]),s._v("遍历对象所有属性，递归调用defineReactive 转为响应式对象，也是动态添加 getter 和 setter，实现双向绑定\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.")]),s._v("在"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v("中会收集属性的依赖，以及其属性值的依赖\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.")]),s._v("当数据发生改变，会触发"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("函数，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("通知视图更新\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"_22-说一说-vue-的-keep-alive"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22-说一说-vue-的-keep-alive"}},[s._v("#")]),s._v(" 22.说一说 vue 的 keep-alive ？")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("keep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("作用：缓存组件，提升性能，避免重复加载一些不需要经常变动且内容较多的组件\nkeep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive属性 abstract"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 抽象组件，是一个抽象组件：它自身不会渲染一个 DOM 元素，也不会出现在父组件链中。")]),s._v("\n 当首次渲染的时候，会判断有没有这个属性，才会挂载到父组件上\nkeep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive 包裹动态组件时，会缓存不活动的组件实例\n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("keep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("的使用方法：使用"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<keep-alive>")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("标签对需要缓存的组件进行包裹， \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//被keep-alive包含的组件不会被再次初始化，也就意味着不会重走生命周期函数")]),s._v("\n但是有时候是希望我们缓存的组件可以能够再次进行渲染，这时Vue为我们解决了这个问题\n被包含在 keep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive 中创建的组件，会多出两个生命周期的钩子"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" activated 与 deactivated：\nactivated 当 keep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive 包含的组件再次渲染的时候触发\ndeactivated 当 keep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive 包含的组件销毁的时候触发\nkeep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive可以接收"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("个属性做为参数进行匹配对应的组件进行缓存")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("include包含的组件")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("可以为字符串，数组，以及正则表达式"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("只有匹配的组件会被缓存"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exclude排除的组件")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("以为字符串，数组，以及正则表达式"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("任何匹配的组件都不会被缓存"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max缓存组件的最大值")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("类型为字符或者数字"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("可以控制缓存组件的个数"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n注：当使用正则表达式或者数组时，一定要使用v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bind\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//防坑指南")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("keep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive 先匹配被包含组件的 name 字段，如果 name 不可用，则匹配当前组件 components 配置中的注册名称。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("keep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive 不会在函数式组件中正常工作，因为它们没有缓存实例。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("当匹配条件同时在 include 与 exclude 存在时，以 exclude "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("优先级最高")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("当前vue "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.4")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".2")]),s._v(" version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("。比如：包含于排除同时匹配到了组件"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("，那组件"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("A")]),s._v("不会被缓存。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v("包含在 keep"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("alive 中，但符合 exclude ，不会调用activated和 deactivated。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h2",{attrs:{id:"_23-说一说vue-router-实现懒加载的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23-说一说vue-router-实现懒加载的方法"}},[s._v("#")]),s._v(" 23.说一说vue-router 实现懒加载的方法？")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("vue"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("router 实现懒加载的方法有两种： "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ES6")]),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("的impot方式")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("component")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/* webpackChunkName: "about" */')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'../views/About.vue'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VUE")]),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("中的异步组件进行懒加载方式")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("component")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'../views/About'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 加分回答 vue"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("router 实现懒加载的作用：性能优化，不用到该路由，不加载该组件。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_24-说一说computed和watch的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_24-说一说computed和watch的区别"}},[s._v("#")]),s._v(" 24.说一说computed和watch的区别？")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" computed： 是计算属性，依赖其它属性值，并且 computed 的值有缓存，只有它依赖的属性值发生改变，下一次获取 computed 的值时才会重新计算 computed 的值；必须要有返回值 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("不支持异步，当Computed中有异步操作时，无法监听数据的变化，如果computed属性的属性值是函数，那么默认使用"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v("方法，函数的返回值就是属性的属性值；在computed中，属性有一个"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v("方法和一个"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("方法，当数据发生变化时，会调用"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("方法\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" watch： 更多的是观察的作用"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("有两个属性，深度监听需要加deep")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("，immediate："),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("组件加载立即触发回调函数"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("监听的函数接收两个参数，第一个参数是最新的值，第二个是变化之前的值"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("支持异步，类似于某些数据的监听回调 ，每当监听的数据变化时都会执行回调进行后续操作； \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("加分回答 computed应用场景：需要进行数值计算，并且依赖于其它数据时，应该使用 computed，因为可以利用 computed 的缓存特性，避免每次获取值时，都要重新计算； watch应用场景：需要在数据变化时执行异步或开销较大的操作时，应该使用 watch，使用 watch "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("选项允许我们执行异步操作")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" 访问一个 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("API")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"_25-vue中刷新页面的方式有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_25-vue中刷新页面的方式有哪些"}},[s._v("#")]),s._v(" 25.vue中刷新页面的方式有哪些")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("原生js location"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reload")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  需要刷新的时候加这么一句代码，即可刷新\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("借助vue中的路由跳转方式， 在需要刷新的地方 写入 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$router"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("go")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  因为是刷新当前页面，所以参数是"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//以上两种都是强制刷新，页面会出现短暂的空白")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("provide")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("po wai de"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("inject组合方式  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//是普通刷新")]),s._v("\n在父组件中定义一个布尔值变量，在定义一个刷新函数 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("，刷新函数需要做的是，把布尔值取反，在确定取反之后")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("加个"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextTick")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("保证先取法"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，再一次取反，通过v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 控制子组件的显示隐藏，当需要刷新的时候，子组件调用父组件中的刷新函数\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_26-说一下登录流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_26-说一下登录流程"}},[s._v("#")]),s._v(" 26.说一下登录流程")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 我们在登录页点击登录的时候"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("前端会带着用户输入的用户名和密码，去调用后端的登录接口\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("后端收到请求会去验证用户名和密码，如果验证失败会返回错误信息，前端提示相应的错误信息，如果验证成功，后端就会给前端返回一个token\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("前端拿到token后，将token存储到 vuex和localStorage中，并跳转到相应的页面，并提示登录成功\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v("前端每一次跳转到需要具备登录状态的页面时，都需要判断当前token是否存在，不存在则跳转到登录页，存在则正常跳转，通常把这个逻辑封装在路由守卫， router"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("beforEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("to"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("from"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 路由前置守卫，另外在向后端发送其他请求时，需要在请求头中带上token，项目中我们一般把这一块的逻辑封装在请求拦截器中，后端判断请求头中有没有token，有则验证该token，验证成功就会正常的给我们返回数据，如果验证失败，比如token过期了，那么就会返回相应的错误码，前端拿到错误信息，清除token并回退至登录页\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_27-vue实例最后挂载到哪个标签上的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_27-vue实例最后挂载到哪个标签上的"}},[s._v("#")]),s._v(" 27.vue实例最后挂载到哪个标签上的")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("vue实例最后会挂载在body标签里面，所以我们在vue中是获取不了body 标签的，如果要使用body标\n签的话需要用原生的方式获取\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_28-token是什么-加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_28-token是什么-加密"}},[s._v("#")]),s._v(" 28.token是什么？（加密）")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" token也可以称做令牌，一般由 uid"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("time"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sign")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("签名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("固定参数"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 组成\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("uid")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 用户唯一身份标识\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("time")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 当前时间的时间戳\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("sign")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 签名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 使用 hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("encrypt 压缩成定长的十六进制字符串，以防止第三方恶意拼接\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("固定参数")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("可选"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 将一些常用的固定参数加入到 token 中是为了避免重复查库\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" token在客户端一般存放于localStorage，cookie，或sessionStorage中。在服务器一般存于数据\n库中\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" token 的认证流程\n用户登录，成功后服务器返回Token给客户端。\n客户端收到数据后保存在客户端\n客户端再次访问服务器，将token放入headers中 或者每次的请求 参数中\n服务器端采用filter过滤器校验。校验成功则返回请求数据，校验失败则返回错误码\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" token可以抵抗"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CSRF")]),s._v("，cookie"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("session不行\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" session时有状态的，一般存于服务器内存或硬盘中，当服务器采用分布式或集群时，session就会\n面对负载均衡问题。负载均衡多服务器的情况，不好确认当前用户是否登录，因为多服务器不共享\nsession\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v(" 客户端登陆传递信息给服务端，服务端收到后把用户信息加密（token）传给客户端，客户端将\ntoken存放于localStroage等容器中。客户端每次访问都传递token，服务端解密token，就知道这\n个用户是谁了。通过cpu加解密，服务端就不需要存储session占用存储空间，就很好的解决负载\n均衡多服务器的问题了。这个方法叫做"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JWT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Json Web Token"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("h2",{attrs:{id:"_29-说一下双向数据绑定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_29-说一下双向数据绑定"}},[s._v("#")]),s._v(" 29.说一下双向数据绑定")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// vue中  v-model 是一个语法糖")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("作用：")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" 将data中的数据和表单元素做一个双向绑定\n      原理：针对不同的表单元素（或者说表单元素type的不同属性值），vue底层会让\n        v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("model实现不同的属性绑定和事件监听 \n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v("\n      \n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" @input \n\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("model"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("等价于\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg"')]),s._v(" @input"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"handleInput"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" @change   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("model"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lazy "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("相当于是触发回车或者失去焦点的时候触发")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" @change\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("model"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("laze"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("等价于\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg"')]),s._v(" @change"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"handleInput"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"checkbox"')]),s._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("checked "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" @change \n\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"checkbox"')]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("model"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"flag"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("等价于\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"checkbox"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("checked"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"flag"')]),s._v(" @change"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"handleInput"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("model"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  而v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("mdel一句指令就搞定了 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg"')]),s._v(" @input"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hanldInput"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" msg2可以使用， e找不到"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 模板中使用事件对象 如果监听的是dom元素事件 "),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("$event")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" 事件对象  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg2"')]),s._v(" @input"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg2 = $event.target.value"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("h2",{attrs:{id:"_30-vue自定义指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_30-vue自定义指令"}},[s._v("#")]),s._v(" 30.vue自定义指令")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("Vue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("directive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mymodel'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" binding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vnode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldVnode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中),需要父节点dom时使用这个钩子")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("inserted")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" binding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vnode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldVnode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//所在组件的 VNode 更新时调用，**但是可能发生在其子 VNode 更新之前**。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" binding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vnode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldVnode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//指令所在组件的 VNode **及其子 VNode** 全部更新后调用。")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("componentUpdated")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" binding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vnode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldVnode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        只调用一次，指令与元素解绑时调用。\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unbind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" binding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vnode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oldVnode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("h2",{attrs:{id:"_31-vue中的computed和data里面的数据以及props可以同名吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_31-vue中的computed和data里面的数据以及props可以同名吗"}},[s._v("#")]),s._v(" 31.vue中的computed和data里面的数据以及props可以同名吗")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("不可以，因为computed和data以及props里面的数据最终会挂载到vue实例上，会被覆盖\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_32-vue中数组的哪些方法可以触发视图的更新-哪些不可以-有什么解决办法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_32-vue中数组的哪些方法可以触发视图的更新-哪些不可以-有什么解决办法"}},[s._v("#")]),s._v(" 32.vue中数组的哪些方法可以触发视图的更新，哪些不可以，有什么解决办法")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("可以触发视图更新的有\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("push "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pop "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("shift "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unshift "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("splice "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sort "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("reverse "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("filter "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("slice "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("concat\n哪些不可以\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("利用索引直接设置一个数组项 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("直接修改数组的长度\nvue源码里缓存了array的原型链，然后重写了这几个方法，触发这几个方法的时候会observer数据，意思是使用这些方法不用我们再进行额外的操作，视图自动进行更新。 推荐使用splice方法会比较好自定义"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("因为splice可以在数组的任何位置进行删除"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("添加操作\n解决办法 \n可以用 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("$set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("newValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n对象的情况 ，vue中的Object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("defineProperty无法检测对象属性的添加或移除，无法监听到，\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("解决办法")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("全局的Vue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("set方法 （哪个对象，哪个属性，值）  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等效于   vm.$set(vm.obj, 'b', 66)")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"_33-说一下路由的传参方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_33-说一下路由的传参方式"}},[s._v("#")]),s._v(" 33.说一下路由的传参方式")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// router  路由的全局最大的一个实例，唯一的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// routes  路由规则列表 ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// route   一条路由规则")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 传参的模式 ")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 查询参数\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("router"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("link to"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/article?desc=美食&city=重庆"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 动态路由的方式传参  ==> 需要配置路由规则 ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// {path:'/user/:id', component:User}      在配置规则里面")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// <router-link to="/user/007">            ')]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 接收\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// query参数接收")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// this.$route.query.key")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 动态路由接收")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// this.$route.params.key")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"_34-说一下router模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_34-说一下router模式"}},[s._v("#")]),s._v(" 34.说一下router模式")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" router "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VueRouter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 路由模式 两种")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. hash模式 ==> # ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. history模式  ===> /不带#号 ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  （如果改成了history模式，以后上下后端需要配置一些东西） ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 后端如果不会，把vue文档丢给他，来，我教你~~~ ")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("mode")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'history'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置路由模式 ，默认是hash")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"路由的按需加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由的按需加载"}},[s._v("#")]),s._v(" 路由的按需加载")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("随着项目功能模块的增加，引入的文件数量剧增。如果不做任何处理，那么首屏加载会相当的缓慢，这个时候就可以用路由的懒加载，原理就是，当访问到某个页面的时候才加载对应的路由\nwebpack"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.4")]),s._v(" 时\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'home'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("components")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@/components/home'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \nwebpack"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.4")]),s._v(" 时\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'home'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("components")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@/components/home'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h2",{attrs:{id:"_35-说一下vue动态组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_35-说一下vue动态组件"}},[s._v("#")]),s._v(" 35.说一下vue动态组件")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("动态组件的使用")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" component 组件 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" is 属性 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 设置挂载点"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("component"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("在哪显示"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("使用is属性来设置要显示哪个组件")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("显示哪一个组件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("component "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("is"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"isShow"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("component>  ")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("jsShow 是个变量 ，是组件名\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("动态组件：可以改变的组件\n        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("解决问题：多个组件在同一位置，切换显示的需求 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("div"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("template"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"_36-自定义指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_36-自定义指令"}},[s._v("#")]),s._v(" 36.自定义指令")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 局部注册，自定义命令")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("directives")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("focus")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义的时候不加v ，用的时候v-focus")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//inserted===>当指令所在的元素节点，被插入挂载到页面上的时候，触发这个函数,只会触发一次")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("inserted")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//自己定义一些想要实现的逻辑")]),s._v("\n        console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("focus")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          \n   Vue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("directive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'color'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("inserted")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" binding")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (el , {value}) =>对象的解构")]),s._v("\n    el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" binding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// v-color="xxx" ==> binding.value ')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// update指令的值改变时触发, binding.value的值修改触发   局部注册指令的时候也可以用")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("update")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" binding")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" binding"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("h2",{attrs:{id:"_37-说一下vue中的插槽"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_37-说一下vue中的插槽"}},[s._v("#")]),s._v(" 37.说一下vue中的插槽")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("插槽分为默认插槽  插槽名字默认是"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" 如果只需要一个地方插入内容则\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("具名插槽   带有name属性的slot， 可以实现内容的定向分发  在slot标签上写上name属性，来决定放哪块内容 v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("slot可以简写为#\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("作用域插槽\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 作用域插槽：插槽可以携带参数，并且这些参数有访问的限制")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子组件插槽转过来的值，只能在对应的template模板中使用")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 给slot标签添加属性的方式，传参")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//  <slot name="footer" abc="abc" msg="123"></slot>')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 所有被被添加的属性，都放到了一个对象中 slotProps 中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  {abc:'abc', msg:'123'}")]),s._v("\n slot插槽，作用：提前占位，将来写在父组件标签中间的那部分内容，就会替换这个标签 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" slot标签中也可以写默认的内容，只会在父组件使用时，没有提供内容的时候被渲染\n原理：实现原理：当子组件vm实例化时，获取到父组件传入的slot标签的内容，虚拟dom存放在"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("vm.$slot")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("中，默认插槽为"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("vm.$slot.default")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("，具名插槽为"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("vm.$slot.xxx")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("，xxx 为插槽名，当组件执行渲染函数时候，遇到slot标签，使用"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("$slot")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("中的内容进行替换，此时可以为插槽传递数据，若存在数据，则可称该插槽为作用域插槽。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h2",{attrs:{id:"_38-说一下路由守卫"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_38-说一下路由守卫"}},[s._v("#")]),s._v(" 38.说一下路由守卫")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一 全局守卫")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 全局前置守卫 router.beforeEach((to,from,next)=>{})")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 全局解析守卫 router.beforeResolve()")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3. 全局后置守卫 router.afterEach((to,from) =>{})    ==>它唯一没有next函数")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 二 路由独享守卫 router.beforeEnter ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在配置路由的时候定义的守卫，只在进入当前路由之前触发 拦住")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 三 组件内守卫  ==> .vue文件中，配置的守卫，只对组件生效")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. router.beforeRouteEnter")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. router.beforeRouteUpdate ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3. router.beforeRouteLeave")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("  说明\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导航守卫 ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 全局守卫 3个  beforeEach / beforeResolve/ afterEach")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 路由独享守卫 1个  路由配置的时候定义的守卫  beforeEnter")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 组件内的时候 3个 beforeRouteEnter   ==> 没有this   next(vm => {vm.msg})")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//                beforeRouteUpdate  ==> 动态路由切换，复用组件，如果想要重新请求数据")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//                beforeRouteLeave   ==> 在离开当前组件之前，询问一下，是否要离开呢")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h2",{attrs:{id:"_39-vue-的父子组件生命周期钩子函数执行顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_39-vue-的父子组件生命周期钩子函数执行顺序"}},[s._v("#")]),s._v(" 39.Vue 的父子组件生命周期钩子函数执行顺序")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("加载渲染过程\n父beforeCreate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("父created"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("父beforeMount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("子beforeCreate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("子created"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("子beforeMount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("子mounted"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("父mounted\n更新过程\n父beforeUpdate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("子beforeUpdate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("子updated"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("父updated\n销毁过程\n父beforeDestroy"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("子beforeDestroy"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("子destroyed"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("父destroyed\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"_40-当new-vue发生了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_40-当new-vue发生了什么"}},[s._v("#")]),s._v(" 40.当new Vue发生了什么")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Vue构造函数传入配置项options "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("在Vue构造函数里调用"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("_init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("_init在里面调用了initState")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("方法，初始化了我们配置项的一些东西，data props，methods，computed，watch，当判断配置项有data时， "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("执行initData")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("方法，在initData方法中\n判断data是否是一个函数，如果是一个函数，就去调用这个函数，函数的返回值是一个对象，给vm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_data 如果data不是一个函数，直接取data对象 取这个对象的所有属性 Object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("keys")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 循环为每个属性调用 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("proxy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("_data")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("方法，proxy在内部将每个属性代理到了vm实例上，并设置"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" 和"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v("方法 定义一个dep类，在"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v("里收集依赖，数据发生改变，wacher通知视图更新\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_41-vue-loader是什么-使用它的用途有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_41-vue-loader是什么-使用它的用途有哪些"}},[s._v("#")]),s._v(" 41.vue-loader是什么？使用它的用途有哪些？")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v(" Vue"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("loader 会解析文件，提取出每个语言块 是vue文件的一个加载器，把template"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("style转换成js模块。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_42-常见的vue事件修饰符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_42-常见的vue事件修饰符"}},[s._v("#")]),s._v(" 42.常见的vue事件修饰符")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stop"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("阻止冒泡\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prevent"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("阻止默认行为\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("仅绑定元素自身触发\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("once"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.1")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".4")]),s._v(" 新增"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("只触发一次\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("passive"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.3")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v(" 新增"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("滚动事件的默认行为")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("即滚动行为"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 将会立即触发"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("不能和"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prevent 一起使用\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sync 修饰符   自动更新父组件属性的 v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("on 监听器\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("native  让我们在子组件上定义的事件不在默认为是子组件提交的事件\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_43-ajax请求代码应该写在组件的methods中还是vuex的actions中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_43-ajax请求代码应该写在组件的methods中还是vuex的actions中"}},[s._v("#")]),s._v(" 43.ajax请求代码应该写在组件的methods中还是vuex的actions中")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("如果请求来的数据是不是要被其他组件公用，仅仅在请求的组件内使用，就不需要放入vuex 的state里。\n如果被其他地方复用，这个很大几率上是需要的，如果需要，请将请求放入action里，方便复用。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_44-vuex的严格模式是什么-有什么作用-怎么开启"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_44-vuex的严格模式是什么-有什么作用-怎么开启"}},[s._v("#")]),s._v(" 44.Vuex的严格模式是什么,有什么作用,怎么开启？")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("在严格模式下，无论何时发生了状态变更且不是由mutation函数引起的，将会抛出错误。这能保证所有的状态变更都能被调试工具跟踪到\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//开启方式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" store "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vuex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Store")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("strict")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_45-mutation和action有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_45-mutation和action有什么区别"}},[s._v("#")]),s._v(" 45.mutation和action有什么区别")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("action 提交的是 mutation，而不是直接变更状态。mutation可以直接变更状态\naction 可以包含任意异步操作。mutation只能是同步操作\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 提交方式不同\naction 是用"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("store"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dispatch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ACTION_NAME'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("来提交。\nmutation是用"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$store"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("commit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SET_NUMBER'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("来提交\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 接收参数不同\n接收参数不同，mutation第一个参数是state，而action第一个参数是context，\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_46-在v-model上怎么用vuex中state的值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_46-在v-model上怎么用vuex中state的值"}},[s._v("#")]),s._v(" 46.在v-model上怎么用Vuex中state的值？")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("需要通过computed计算属性来转换。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("input v"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("model"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...当然我们也可以引入map辅助函数")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("mapState"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vuex'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("computed")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mapState")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'message'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如何是模块里面的话，则需要加上模块名 ...mapState('user'['message'])")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("message")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$store"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("state"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("message\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$store"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("commit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'updateMessage'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h2",{attrs:{id:"_47-vue里面router-link在电脑上有用-在安卓上没反应怎么解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_47-vue里面router-link在电脑上有用-在安卓上没反应怎么解决"}},[s._v("#")]),s._v(" 47.Vue里面router-link在电脑上有用，在安卓上没反应怎么解决")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("Vue路由在Android机上有问题，babel问题，安装babel polypill插件解决\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_48-vue2中注册在router-link上事件无效解决方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_48-vue2中注册在router-link上事件无效解决方法"}},[s._v("#")]),s._v(" 48.Vue2中注册在router-link上事件无效解决方法")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("使用@click"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("native。原因：router"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("link会阻止click事件，"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("native指直接监听一个原生事件\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_49-vue中如何统一监听组件报错"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_49-vue中如何统一监听组件报错"}},[s._v("#")]),s._v(" 49.vue中如何统一监听组件报错")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("onerror\n可以监听当前页面所有的js报错，jquery时代经常使用，全局只绑定一次即可，不要放在多次渲染的组件中，这样容易多次绑定\nwindow"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("onerror")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("source"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("line")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_50-过滤器是什么-怎么实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_50-过滤器是什么-怎么实现"}},[s._v("#")]),s._v(" 50.过滤器是什么，怎么实现")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("根据过滤器的名称，过滤器是用来过滤数据的"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 需要格式化数据的情况，比如需要处理时间、价格等数据格式的输出 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 显示。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 比如后端返回一个 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("年月日的日期字符串"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("，前端需要展示为 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("多少天前"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" 的数据格式，此时就可以用"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("fliters")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("过滤器来处理数据。\n过滤器是一个函数，它会把表达式中的值始终当作函数的第一个参数。过滤器用在"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("插值表达式"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("**{{ }}**")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v(" 和 "),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("**v-bind**")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("表达式"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v(" 中，然后放在操作符“ "),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("**|**")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v(" ”后面进行指示。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("li"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("商品价格："),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("price "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" filterPrice"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("li"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("filters")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filterPrice")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("price")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" price "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'￥'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" price"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"_51-说一下常见的事件修饰符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_51-说一下常见的事件修饰符"}},[s._v("#")]),s._v(" 51.说一下常见的事件修饰符")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stop：等同于 JavaScript 中的 event"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("stopPropagation")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ，防止事件冒泡；\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prevent ：等同于 JavaScript 中的 event"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("preventDefault")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ，防止执行预设的行为（如果事件可取消，则取消该事件，而不停止事件的进一步传播）；\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("capture ：与事件冒泡的方向相反，事件捕获由外到内；\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("self ：只会触发自己范围内的事件，不包含子元素；\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("once ：只会触发一次。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("native 个人理解就是，native最大的作用就是把组件上的事件不再认为是自定义的事件，而是原生的事件，原理是事件冒泡\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sync 当一个子组件改变了一个 prop 的值时，这个变化也会同步到父组件中所绑定\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_52-vue-中给-data-中的对象属性添加一个新的属性时会发生什么-如何解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_52-vue-中给-data-中的对象属性添加一个新的属性时会发生什么-如何解决"}},[s._v("#")]),s._v(" 52.Vue 中给 data 中的对象属性添加一个新的属性时会发生什么？如何解决")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("，obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b 已经成功添加，但是视图并未刷新。这是因为在Vue实例创建时，obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b并未声明，因此就没有被Vue转换为响应式的属性，自然就不会触发视图的更新"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("当然这并不是Object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("defineProperty的缺陷，而是vue限制了，由玉溪说了是性能原因，性能代价和获得的用户体验收益不成正比，我下来也确实试了一下，\n解决方法：\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addObjB")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("$set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'obj.b'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"_53-vue-模板是如何编译的-经历了哪些过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_53-vue-模板是如何编译的-经历了哪些过程"}},[s._v("#")]),s._v(" 53.Vue 模板是如何编译的？经历了哪些过程？")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("Vue 模板在运行时会被编译成渲染函数，最终生成 Virtual "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("，进行页面渲染。\nVue 模板编译的过程主要分为以下三个步骤：\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("解析模板：Vue 会使用正则表达式解析模板字符串，解析出其中的指令、标签、属性等内容。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("生成 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AST")]),s._v("（抽象语法树）：将解析后的模板字符串转化为抽象语法树，抽象语法树是一个以 JavaScript 对象表示的树形结构，它将模板中的各个节点和属性用 JavaScript 对象的形式表示出来，方便后续对模板进行分析和处理。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("生成渲染函数：将 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AST")]),s._v(" 转化为渲染函数，渲染函数是一个纯 JavaScript 函数，用于将模板转化为 Virtual "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DOM")]),s._v("。\n在模板的编译过程中，还会涉及到动态指令、插槽、组件等特殊情况的处理，不同的编译器实现可能存在一些差异，但大体的编译流程是相似的。\n通过模板的编译，我们可以将模板转化为可被 JavaScript 运行的函数，从而更高效地渲染页面，提高应用的性能。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);